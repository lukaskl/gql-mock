// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypeScript Operations Map Plugin Test 1 1`] = `
"export interface OperationsMap {
  'q1': { operationType: Q1Query, variablesType: Q1QueryVariables, kind: 'query' }
  'q2': { operationType: Q2Query, variablesType: Q2QueryVariables, kind: 'query' }
}"
`;

exports[`TypeScript Operations Map Plugin Test 2 1`] = `
"

export interface FieldArgsUsagesMap {
  'Query': {
    search: QuerySearchArgs
  },
  'Mutation': {
    login: MutationLoginArgs
  }
}

export type TypeUsagesForSearchQuery = { SearchResult: SearchQuery['search'][0] } &
  { Query: SearchQuery }

export interface OperationsMap {
  'search': { operationType: SearchQuery, variablesType: SearchQueryVariables, typeUsages: TypeUsagesForSearchQuery, kind: 'query' }
}

export interface TypesMap {
  operations: OperationsMap
  fieldArgsUsages: FieldArgsUsagesMap
}

export const documentsMap = {
  'search': { document: SearchDocument, kind: 'query' as const }
}"
`;

exports[`TypeScript Operations Map Plugin Test 3 1`] = `
"

export interface FieldArgsUsagesMap {
  'Query': {
    search: QuerySearchArgs
  },
  'Mutation': {
    login: MutationLoginArgs
  }
}

export type TypeUsagesForSearch1Query = { SearchResult: Search1Query['search'][0] } &
  { Query: Search1Query }

  export type TypeUsagesForSearch2Query = { SearchResult: Search2Query['search'][0] } &
  { Query: Search2Query }

export interface OperationsMap {
  'search1': { operationType: Search1Query, variablesType: Search1QueryVariables, typeUsages: TypeUsagesForSearch1Query, kind: 'query' }
  'search2': { operationType: Search2Query, variablesType: Search2QueryVariables, typeUsages: TypeUsagesForSearch2Query, kind: 'query' }
}

export interface TypesMap {
  operations: OperationsMap
  fieldArgsUsages: FieldArgsUsagesMap
}

export const documentsMap = {
  'search1': { document: Search1Document, kind: 'query' as const },
  'search2': { document: Search2Document, kind: 'query' as const }
}"
`;
